{
  "$schema": "https://www.krakend.io/schema/v3.json",
  "version": 3,
  "timeout": "3000ms",
  "cache_ttl": "300s",
  "output_encoding": "json",
  "plugin": {
    "pattern": ".so",
    "folder": "/opt/krakend/plugins/"
  },
  "extra_config": {
    "plugin/http-server": {
      "name": [
        "header-logger"
      ]
    },
    "telemetry/metrics": {
      "collection_time": "30s",
      "listen_address": ":8090"
    },
    "telemetry/logging": {
      "level": "DEBUG",
      "prefix": "[KRAKEND]",
      "syslog": false,
      "stdout": true,
      "format": "logstash"
    },
    "security/cors": {
      "allow_origins": [
        "http://localhost:8080",
        "http://localhost:3000",
        "http://192.168.99.100:3000"
      ],
      "allow_methods": [
        "POST",
        "GET"
      ],
      "allow_headers": [
        "Origin",
        "Authorization",
        "Content-Type",
        "Accept"
      ],
      "expose_headers": [
        "Content-Length",
        "Content-Type"
      ],
      "max_age": "12h"
    },
    "auth/revoker": {
      "N": 10000000,
      "P": 0.0000001,
      "hash_name": "optimal",
      "TTL": 1500,
      "port": 1234,
      "token_keys": [
        "jti"
      ]
    }
  },
  "endpoints": [
    {
      "endpoint": "/splash",
      "input_headers": [
        "Accept",
        "Authorization"
      ],
      "input_query_strings": [
        "lat",
        "lon"
      ],
      "backend": [
        {
          "host": [
            "http://fake_api:8080"
          ],
          "url_pattern": "/shop/campaigns",
          "allow": [
            "campaigns"
          ]
        },
        {
          "host": [
            "http://fake_api:8080"
          ],
          "url_pattern": "/shop/new-campaigns",
          "extra_config": {
            "proxy": {
              "shadow": true
            }
          }
        },
        {
          "host": [
            "http://fake_api:8080"
          ],
          "url_pattern": "/shop/products",
          "allow": [
            "products"
          ],
          "extra_config": {
            "validation/cel": [
              {
                "check_expr": "size(req_headers['Authorization']) > 0 && req_headers['Authorization'][0].contains('Bearer ')"
              },
              {
                "check_expr": "double(req_querystring.lat[0]) != 0.0 && double(req_querystring.lat[0]) >= -90.0 && double(req_querystring.lat[0]) <= 90.0"
              },
              {
                "check_expr": "double(req_querystring.lon[0]) != 0.0 && double(req_querystring.lon[0]) >= -180.0 && double(req_querystring.lon[0]) <= 180.0"
              }
            ],
            "qos/ratelimit/proxy": {
              "max_rate": 1,
              "capacity": 1
            }
          }
        }
      ],
      "extra_config": {
        "qos/ratelimit/router": {
          "key": "splash-rate-limiter",
          "max_rate": 2
        }
      }
    },
    {
      "endpoint": "/sequential/{id}",
      "input_headers": [
        "Accept"
      ],
      "backend": [
        {
          "host": [
            "http://fake_api:8080"
          ],
          "url_pattern": "/hotels/{id}",
          "allow": [
            "destination_id"
          ],
          "extra_config": {
            "backend/http": {
              "return_error_details": "hotels"
            }
          }
        },
        {
          "host": [
            "http://fake_api:8080"
          ],
          "url_pattern": "/destinations/{resp0_destination_id}",
          "extra_config": {
            "validation/cel": [
              {
                "check_expr": "has(.Resp0_destination_id}"
              }
            ]
          }
        }
      ],
      "extra_config": {
        "proxy": {
          "sequential": true
        }
      }
    },
    {
      "endpoint": "/fail",
      "input_headers": [
        "Accept"
      ],
      "backend": [
        {
          "host": [
            "http://fake_api:8080"
          ],
          "url_pattern": "/user/1",
          "group": "user"
        },
        {
          "host": [
            "http://fake_url_that_should_not_resolve.tld"
          ],
          "url_pattern": "/",
          "group": "none"
        }
      ]
    },
    {
      "endpoint": "/public",
      "input_headers": [
        "Accept"
      ],
      "backend": [
        {
          "host": [
            "https://api.github.com"
          ],
          "url_pattern": "/users/jbactad",
          "allow": [
            "avatar_url",
            "name",
            "company",
            "blog",
            "location",
            "mail",
            "hireable",
            "followers",
            "public_repos",
            "public_gists"
          ],
          "mapping": {
            "blog": "website"
          },
          "group": "github"
        }
      ]
    },
    {
      "endpoint": "/private/auth0",
      "input_headers": [
        "Accept"
      ],
      "backend": [
        {
          "host": [
            "http://fake_api:8080"
          ],
          "url_pattern": "/user/1"
        }
      ],
      "extra_config": {
        "auth/validator": {
          "alg": "RS256",
          "audience": [
            "http://api.example.com"
          ],
          "roles_key": "roles",
          "roles": [
            "user",
            "admin"
          ],
          "jwk_url": "https://albert-test.auth0.com/.well-known/jwks.json"
        }
      }
    },
    {
      "endpoint": "/private/custom",
      "input_headers": [
        "Accept",
        "Authorization"
      ],
      "backend": [
        {
          "host": [
            "http://fake_api:8080"
          ],
          "url_pattern": "/user/1"
        }
      ],
      "extra_config": {
        "plugin/req-resp-modifier": {
          "name": [
            "auth-to-apikey-request"
          ]
        },
        "auth/validator": {
          "alg": "HS256",
          "audience": [
            "http://api.example.com"
          ],
          "roles_key": "roles",
          "issuer": "https://krakend.io",
          "roles": [
            "role_a",
            "role_c"
          ],
          "jwk_url": "http://fake_api:8080/jwk/symmetric",
          "disable_jwk_security": true
        }
      }
    },
    {
      "endpoint": "/token",
      "input_headers": [
        "Accept"
      ],
      "backend": [
        {
          "host": [
            "http://fake_api:8080"
          ],
          "url_pattern": "/token",
          "encoding": "json"
        }
      ],
      "extra_config": {
        "auth/signer": {
          "alg": "HS256",
          "kid": "sim2",
          "keys_to_sign": [
            "access_token",
            "refresh_token"
          ],
          "jwk_url": "http://fake_api:8080/jwk/symmetric",
          "disable_jwk_security": true
        }
      }
    },
    {
      "method": "GET",
      "endpoint": "/filefroms3",
      "backend": [
        {
          "host": [
            "http://test-bucket"
          ],
          "disable_host_sanitize": true,
          "url_pattern": "/sample.json",
          "encoding": "json",
          "group": "s3content",
          "extra_config": {
            "plugin/req-resp-modifier": {
              "name": ["example-response-modifier"]
            },
            "plugin/http-client": {
              "name": "s3",
              "bucket": "test-bucket"
            },
            "backend/http": {
              "return_error_details": "s3content_error"
            }
          }
        }
      ]
    }
  ]
}
